<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fa.plus.mapper.ReviewMapper">
	<insert id="insertReview" parameterType="com.fa.plus.domain.shop.Review">
		INSERT INTO productReview(orderDetailNum, score, review, productNum, memberIdx, reviewDate, showReview, answerStatus)
			VALUES(#{orderDetailNum}, #{score}, #{review}, #{productNum}, #{memberIdx}, SYSDATE, 1, 0)
	</insert>
	
	<insert id="insertReviewFile" parameterType="com.fa.plus.domain.shop.Review">
		INSERT INTO productReviewFile(fileNum, orderDetailNum, filename)
			VALUES(productReviewFile_seq.NEXTVAL, #{orderDetailNum}, #{filename})
	</insert>
	
	<select id="findByReviewSummary" parameterType="map" resultType="com.fa.plus.domain.shop.Summary">
		SELECT NVL(COUNT(*), 0) count,
			   ROUND(NVL(AVG(score), 0), 1) ave,
			   COUNT(DECODE(score, 1, 1)) score1, 
			   COUNT(DECODE(score, 2, 1)) score2, 
			   COUNT(DECODE(score, 3, 1)) score3, 
			   COUNT(DECODE(score, 4, 1)) score4, 
			   COUNT(DECODE(score, 5, 1)) score5 
		FROM productReview
		WHERE productNum = #{productNum} AND showReview = 1
	</select>

	<select id="listReview" parameterType="map" resultType="com.fa.plus.domain.shop.Review">
		SELECT pr.num, pr.memberIdx, userName, score, review, answer, productNum, filename, 
			TO_CHAR(reviewDate, 'YYYY-MM-DD') reviewDate, 
			TO_CHAR(answerDate, 'YYYY-MM-DD') answerDate
		FROM productReview pr
		JOIN member1 m ON pr.memberIdx = m.memberIdx 
		LEFT OUTER JOIN (
			SELECT orderDetailNum, LISTAGG(filename, ',') WITHIN GROUP(ORDER BY fileNum) filename
            FROM productReviewFile
            GROUP BY orderDetailNum	
		) f ON pr.num = f.num
		WHERE pr.productNum = #{productNum} AND showReview = 1
		<choose>
			<when test="sortNo==2">
				ORDER BY score DESC, reviewDate DESC
			</when>
			<when test="sortNo==3">
				ORDER BY score ASC, reviewDate DESC
			</when>
			<otherwise>
				ORDER BY reviewDate DESC
			</otherwise>
		</choose>
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="dataCount2" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM productReview
		<where>
			<if test="memberIdx != null">
				memberIdx = #{memberIdx}
			</if>
			<if test="mode != null">
				<if test="mode == 2">
					AND ( answer IS NOT NULL )
				</if>
				<if test="mode == 3">
					AND ( answer IS NULL )
				</if>
			</if>
		</where>
	</select>
	
	<select id="listReview2" parameterType="map" resultType="com.fa.plus.domain.shop.Review">
		SELECT pr.orderDetailNum, pr.memberIdx, userName, score, review, answer, pr.productNum, filename, showReview, answerStatus,
			pr.reviewDate, pr.answerDate, productName, op.optionValue, op2.optionValue optionValue2
		FROM productReview pr
		JOIN member1 m ON pr.memberIdx = m.memberIdx 
		JOIN orderDetail od ON pr.orderDetailNum = od.orderDetailNum
		JOIN product p ON p.productNum = od.productNum
		JOIN optionDetail op ON od.detailNum = op.detailNum
		JOIN optionDetail op2 ON od.detailNum2 = op2.detailNum		
		LEFT OUTER JOIN (
			SELECT orderDetailNum, LISTAGG(filename, ',') WITHIN GROUP(ORDER BY fileNum) filename
            FROM productReviewFile
            GROUP BY orderDetailNum	
		) f ON pr.orderDetailNum=f.orderDetailNum
		<where>
			<if test="memberIdx != null">
				pr.memberIdx = #{memberIdx}
			</if>
			<if test="mode != null">
				<if test="mode == 2">
					AND ( answer IS NOT NULL )
				</if>
				<if test="mode == 3">
					AND ( answer IS NULL )
				</if>
			</if>
		</where>
		ORDER BY reviewDate DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<update id="updateReview" parameterType="com.fa.plus.domain.shop.Review">
		UPDATE productReview SET answer = #{answer}, answerDate = SYSDATE, showReview = #{showReview}, answerStatus = #{answerStatus} 
		WHERE orderDetailNum = #{orderDetailNum}
	</update>
	
	<select id="listReviewFile" parameterType="long" resultType="com.fa.plus.domain.shop.Review">
		SELECT fileNum, orderDetailNum, filename
		FROM productReviewFile
		WHERE orderDetailNum = #{orderDetailNum}
	</select>
	
	<delete id="deleteReview" parameterType="long">
		DELETE FROM productReview
		WHERE orderDetailNum = #{orderDetailNum}
	</delete>
</mapper>