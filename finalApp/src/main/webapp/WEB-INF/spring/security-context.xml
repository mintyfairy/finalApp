<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan base-package="com.fa.plus"/>

	<http auto-config="true" use-expressions="true">
	        <csrf disabled="true"/>
	        
	        <!-- 스마트 에디터 -->
	        <headers>
	        	<frame-options policy="SAMEORIGIN"/>
	        	<hsts disabled="true"/>
	        </headers>
	        <!-- 모든 사용자 항상접근 -->
	        <intercept-url pattern="/" access="permitAll"/>
	        <intercept-url pattern="/main" access="permitAll"/>
	        <intercept-url pattern="/index.jsp" access="permitAll"/>
	        
	        <intercept-url pattern="/member/login" access="permitAll"/>
	        <intercept-url pattern="/member/join" access="permitAll"/>
	        <intercept-url pattern="/member/member" access="permitAll"/>
	        <intercept-url pattern="/member/userIdCheck" access="permitAll"/>
	        <intercept-url pattern="/member/complete" access="permitAll"/>
	        <intercept-url pattern="/member/pwdFind" access="permitAll"/>
	        <intercept-url pattern="/member/idFind" access="permitAll"/>
	        <intercept-url pattern="/member/expired" access="permitAll"/>
	        
	        <intercept-url pattern="/site/main" access="permitAll"/>
	        <intercept-url pattern="/site/list" access="permitAll"/>
	        <intercept-url pattern="/site/scroll" access="permitAll"/>
	        <intercept-url pattern="/site/places/**" access="permitAll"/>

	        <intercept-url pattern="/car/main" access="permitAll"/>
	        <intercept-url pattern="/car/car/**" access="permitAll"/>

	        <intercept-url pattern="/shop" access="permitAll"/>
	        <intercept-url pattern="/shop/main" access="permitAll"/>


	        <intercept-url pattern="/shop/product/reivew/list" access="permitAll"/>
	        <intercept-url pattern="/shop/product/**" access="permitAll"/>

	        <intercept-url pattern="/shop/customer/notice/list" access="permitAll"/>
	        <intercept-url pattern="/shop/customer/notice/article" access="permitAll"/>
	        
	        <intercept-url pattern="/shop/customer/qna/question/listQ" access="permitAll"/>
	        
	        <intercept-url pattern="/shop/customer/asManual/listManual" access="permitAll"/>
	        <intercept-url pattern="/shop/customer/asManual/articleManual" access="permitAll"/>
	        
	        <intercept-url pattern="/resources/**" access="permitAll"/>
	        <intercept-url pattern="/uploads/**" access="permitAll"/>
	        
			<!-- admin페이지 -->
			<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP','ROLE_CAMP')"/>
			<intercept-url pattern="/cs/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
			
			<intercept-url pattern="/shopping/customer/notice/write" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
			<intercept-url pattern="/shopping/customer/notice/update" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
			<intercept-url pattern="/shopping/customer/notice/delete" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
			<intercept-url pattern="/shopping/customer/qna/answer/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
			<intercept-url pattern="/shopping/customer/partnershipAnswer/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
	        
			<intercept-url pattern="/shopping/admin/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>



			<!-- 캠핑장업체 페이지 -->
			<intercept-url pattern="/admin/siteManage/**" access="hasAnyRole('ROLE_CAMP')"/>
			<intercept-url pattern="/admin/siteChart/**" access="hasAnyRole('ROLE_CAMP')"/>
			
			<!-- 쇼팡 페이지 -->
			<intercept-url pattern="/shop/product/write" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP')"/>
			
			<!-- 모든 페이지 -->
			<intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EMP','ROLE_CAMP','ROLE_USER')"/>
			
			<!-- 사용자 정의 로긴 폼 -->
	    	<form-login
	    		login-page="/member/login"
	    		login-processing-url="/member/login"
	    		username-parameter="userId"
	    		password-parameter="userPwd"
	    		default-target-url="/"
	    		always-use-default-target="true"
	    		authentication-success-handler-ref="LoginSuccessHandler"
	    		authentication-failure-handler-ref="LoginFailureHandler"
	    		
	    	/>
	    	
	    	<logout
	    		logout-url="/member/logout"
	    		invalidate-session="true"
	    		logout-success-url="/"
	    	/>
	    	
	    	<!-- 접근권환없다면 -->
	    	<access-denied-handler error-page="/member/noAuthorized"/>
	    	
	    	<!-- 동일아이디 2명 로긴 -->
	    	<session-management>
	    		<concurrency-control max-sessions="1"
	    			expired-url="/member/expired"/>
	    	</session-management>
	    	
	    	<!-- AJAX로그인 검사를 위한 필터등록 -->
	    	<!-- EXCEPTION_TRANSLATION_FILTER:보호된 요청을 처리하는동안
	    		발생하는 예외를 위임받아처리함  -->
	    	<custom-filter ref="ajaxSessionTimeoutFilter"
	    		after="EXCEPTION_TRANSLATION_FILTER"/>
	</http>

	<beans:bean id="LoginSuccessHandler"
				class="com.fa.plus.security.LoginSuccessHandler">
			<beans:property name="defaultUrl" value="/"/>			
	</beans:bean>
	<beans:bean id="LoginFailureHandler"
				class="com.fa.plus.security.LoginFailureHandler">
				<!--  여기서포스트로 보내서 컨트롤러에서 리퀘스트 매핑으로 받음 -->
			<beans:property name="defaultFailureUrl" value="member/login?login_error"/>			
	</beans:bean>

	<!-- bcrypt: 페스워드에 특화된 password hashing function -->
	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- 테이블의 로그인 유저정보 -->
	<!-- 시큐리티는 username, password 를 받으니 별명 주고 enabled 쓰게 햇으니 가져온다-->
	<jdbc-user-service data-source-ref="dataSource"
		id="userService"
		users-by-username-query="select userid AS username,userpwd AS password,enabled from member1 where userid=?"
		authorities-by-username-query="select userid as username,'ROLE_'||authority AS authority from memberAuTHority where userid=?"
	/>
		<!-- 여기서 role_를 붙히는 불편한방식을 사용한이유는 스프링부트에서는 role_붙히면안되기떄문에 부트의방식으로 한 모습-->


	<authentication-manager>
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="bcryptEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	
	<!-- AJAX에서 예외발생시 실핼할 필터 -->
	<beans:bean id="ajaxSessionTimeoutFilter" class="com.fa.plus.security.AjaxSessionTimeoutFilter">
		<beans:property name="ajaxHeader" value="AJAX"></beans:property>
	</beans:bean>	

</beans:beans>
